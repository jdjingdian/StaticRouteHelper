//
//  SharedConstant.swift
//  StaticRouteHelper
//
//  Created by 经典 on 9/1/2023.
//

import Foundation
import Blessed
import SecureXPC
import EmbeddedPropertyList


struct SharedConstant {
    //MARK: XPC START
    static let debugRoute = XPCRoute.named("debug")
    static let uninstallRoute = XPCRoute.named("uninstall")
    static let commandRoute = XPCRoute.named("command").withMessageType(RouterCommand.self).withReplyType(RouterCommandReply.self).throwsType(RouterCommandError.self)
    //MARK: XPC END
    
    
    
    enum SharedConstantsError: Error {
        /// The helper tool's launchd property list's value for `MachServices` array has no elements.
        case missingMachServiceName
        /// The app's info property list is missing its `SMPrivilegedExecutables` key or has no entries in the correct format.
        case missingSMPrivilegedExecutables
    }
    /// Location of the helper tool's launchd property list generated by the system as part of `SMJobBless`.
    ///
    /// In practice this is where `SMJobBless` will place the launchd property list, but this behavior is not officially documented.
    let blessedPropertyListLocation: URL
    /// Location of the helper tool if it has been blessed via `SMJobBless`.
    ///
    /// In practice this is where `SMJobBless` will install the helper tool, but this behavior is not officially documented.
    let blessedLocation: URL
    
    let helperToolVersion: BundleVersion
    
    let helperToolLabel: String
    
    let machServiceName: String
    
    #if ROUTER
    let bundledLocation: URL
    
    #endif
    
    init() throws {
    #if ROUTER
        guard let helperToolLabel = (Bundle.main.infoDictionary?["SMPrivilegedExecutables"]
                                     as? [String : Any])?.first?.key else {
            throw SharedConstantsError.missingSMPrivilegedExecutables
        }
        self.helperToolLabel = helperToolLabel
        self.bundledLocation = URL(fileURLWithPath: "Contents/Library/LaunchServices/\(helperToolLabel)",
                                   relativeTo: Bundle.main.bundleURL).absoluteURL
        let launchdPropertyList = try HelperToolLaunchdPropertyList(from: self.bundledLocation)
        let infoPropertyList = try HelperToolInfoPropertyList(from: self.bundledLocation)
    #else
    #if HELPER
        let launchdPropertyList = try HelperToolLaunchdPropertyList.main
        let infoPropertyList = try HelperToolInfoPropertyList.main
        self.helperToolLabel = launchdPropertyList.label
    #else
        fatalError("""
        No Swift compiler directive was set for this executable. In this sample this is set in the AppConfig.xcconfig \
        and HelperToolConfig.xcconfig configuration files.
        """)
    #endif
    #endif
        
        self.helperToolVersion = infoPropertyList.version
        self.blessedPropertyListLocation = URL(fileURLWithPath: "/Library/LaunchDaemons/\(helperToolLabel).plist")
        self.blessedLocation = URL(fileURLWithPath: "/Library/PrivilegedHelperTools/\(helperToolLabel)")
        
        // Important: If the Mach service name has been changed, for the app until that new version of the helper tool
        // is installed via SMJobBless this will not result in the correct name being found.
        guard let machServiceName = launchdPropertyList.machServices.first?.key else {
            throw SharedConstantsError.missingMachServiceName
        }
        self.machServiceName = machServiceName
    }
}




extension SharedConstant {
    //MARK: XPC Service
    
}
